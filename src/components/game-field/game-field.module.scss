@use "sass:color";
@use "../../grid-mixins";

@use "../../theme" as *;
@use "../../names" as *;

$border-style: outset;

.main {
  // height: 100%;
  // width: 100%;
  @extend %gridCentered;
  overflow: auto;
  padding: 1rem;
  padding-top: 0.5rem;
  gap: 1rem;
  grid-template-columns: minmax(min-content, 1fr) minmax(360px, 1fr);
  margin: 0 auto;
  max-width: min-content;

  @media (orientation: portrait) {
    grid-template-columns: 1fr;
    grid-template-rows: min-content auto;
    max-width: initial;
  }
}

.field {
  --t: #{$tile-color-1};
  position: relative;
  margin: 0 auto;
  justify-content: center;
  height: fit-content;
  border: calc(var(--s-size) / 10) solid $tile-color-alpha;
  overflow: hidden;
  transition: border-color 0.3s;

  @include grid-mixins.board-tile-grid;
  @include grid-mixins.board-tile-grid-variables;

  .row {
    display: contents;
  }

  :global(.#{$DARKNESS}):not(:global(.#{$WON})) & {
    --t: #{color.mix($tile-color-1, $bg-primary, 10%)};
    border-color: color.mix($tile-color-1, $bg-primary, 15%);
  }
}

.loader {
  @extend %centeredAbsolute;
  opacity: 0.5;
  white-space: nowrap;
  font-family: $font-family-special;
  z-index: 5;
}

:global(.#{$CELL}) {
  @extend %gridCentered;
  background-color: var(--t);
  position: relative;
  transition: background 0.3s;

  :global(.#{$CAT_BOX}) {
    z-index: 3;
    transition: transform 0.3s;

    :global(.#{$WON}) & {
      animation: hueRotation 1s 0.5s linear 3;
    }
  }

  :global(.#{$OBJECT_BOX}) {
    z-index: 2;
    transition:
      transform 0.3s,
      opacity 0.3s;
  }

  > :global(.#{$CAT_BOX}),
  > :global(.#{$OBJECT_BOX}) {
    grid-area: 1 / 1;
  }
}

@keyframes hueRotation {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}
