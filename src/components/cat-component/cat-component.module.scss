@use "../../theme" as *;
@use "../../names" as *;
@use "sass:color";

:global(.#{$CAT_BOX}) {
  position: relative;
  width: 100%;
  height: 100%;
  color: color.mix(#ff2ea6, white, 30%);
  transition: color 0.2s;

  // needs to be this way, because the cat specific classes are only set once they have their behaviour
  &:nth-child(2) {
    --t-x: -35%;
  }

  &:nth-child(3) {
    --t-x: 35%;
  }
}

.cat {
  @extend %gridCentered;
  position: relative;
  width: 100%;
  height: 100%;

  $colorTransparent: color-mix(in srgb, currentColor 20%, transparent);
  $colorSolid: color-mix(in srgb, currentColor 40%, rgba(black, 0.5));
  // $colorSolid: currentColor;
  $width: 1px;
  $widthNeg: -1px;
  $blur: 0px;

  filter: drop-shadow($width $widthNeg $blur $colorSolid) drop-shadow($widthNeg $width $blur $colorSolid)
    drop-shadow($width $width $blur $colorSolid) drop-shadow($widthNeg $widthNeg $blur $colorSolid);
  //filter: drop-shadow(3px -2px 1px $colorTransparent);

  svg {
    color: currentColor;
  }
}

.isMom {
  color: #ff2ea6;
}

.moony {
  color: #c09402;
}

.ivy {
  color: #009e28;
}

.splashy {
  color: #106dff;
}

:global(.#{$CELL}) {
  .cat {
    &:not(.isMom) {
      transform: scale(0.65) translate(var(--t-x, 0), 27%);
    }
  }

  ellipse {
    transform-box: fill-box;
    transform-origin: center;
    animation: eye-blink 8s 4s infinite;
  }
}

@keyframes eye-blink {
  0% {
    transform: scaleY(1);
  }
  3% {
    transform: scaleY(0);
  }
  6% {
    transform: scaleY(1);
  }
  9% {
    transform: scaleY(0);
  }
  12% {
    transform: scaleY(1);
  }
}
